---
import StudentLayout from "../layouts/StudentLayout.astro";

const title = "Settings";

// Sample settings data
const userSettings = {
  notifications: {
    emailNotifications: true,
    pushNotifications: false,
    assignmentReminders: true,
    gradeNotifications: true,
    announcementNotifications: true,
    weeklyDigest: false
  },
  privacy: {
    profileVisibility: 'private',
    showEmailToInstructors: true,
    allowPeerMessages: false
  },
  preferences: {
    theme: 'dark',
    language: 'en',
    timezone: 'PST',
    dateFormat: 'MM/DD/YYYY',
    timeFormat: '12h'
  },
  academic: {
    defaultCalendarView: 'week',
    showCompletedAssignments: true,
    gradingScale: 'letter',
    semesterStart: 'fall'
  }
};
---

<StudentLayout title={title} selectedItem="settings">
  <div class="student-settings">
    <div class="settings-header">
      <div class="header-content">
        <h1>Settings</h1>
        <p class="header-description">Customize your learning experience and preferences</p>
      </div>
    </div>

    <div class="settings-content">
      <div class="settings-main">
        <!-- Notification Settings -->
        <section class="settings-section">
          <div class="section-header">
            <div class="section-title">
              <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9"></path>
                <path d="M13.73 21a2 2 0 0 1-3.46 0"></path>
              </svg>
              <h2>Notifications</h2>
            </div>
            <p class="section-description">Manage how you receive updates and reminders</p>
          </div>

          <div class="settings-card">
            <div class="settings-group">
              <div class="setting-item">
                <div class="setting-info">
                  <label for="email-notifications">Email Notifications</label>
                  <span class="setting-description">Receive notifications via email</span>
                </div>
                <div class="toggle-switch">
                  <input 
                    type="checkbox" 
                    id="email-notifications" 
                    checked={userSettings.notifications.emailNotifications}
                  />
                  <label for="email-notifications" class="switch"></label>
                </div>
              </div>

              <div class="setting-item">
                <div class="setting-info">
                  <label for="push-notifications">Push Notifications</label>
                  <span class="setting-description">Receive browser push notifications</span>
                </div>
                <div class="toggle-switch">
                  <input 
                    type="checkbox" 
                    id="push-notifications" 
                    checked={userSettings.notifications.pushNotifications}
                  />
                  <label for="push-notifications" class="switch"></label>
                </div>
              </div>

              <div class="setting-item">
                <div class="setting-info">
                  <label for="assignment-reminders">Assignment Reminders</label>
                  <span class="setting-description">Get reminders for upcoming assignments</span>
                </div>
                <div class="toggle-switch">
                  <input 
                    type="checkbox" 
                    id="assignment-reminders" 
                    checked={userSettings.notifications.assignmentReminders}
                  />
                  <label for="assignment-reminders" class="switch"></label>
                </div>
              </div>

              <div class="setting-item">
                <div class="setting-info">
                  <label for="grade-notifications">Grade Notifications</label>
                  <span class="setting-description">Get notified when grades are posted</span>
                </div>
                <div class="toggle-switch">
                  <input 
                    type="checkbox" 
                    id="grade-notifications" 
                    checked={userSettings.notifications.gradeNotifications}
                  />
                  <label for="grade-notifications" class="switch"></label>
                </div>
              </div>

              <div class="setting-item">
                <div class="setting-info">
                  <label for="announcement-notifications">Announcement Notifications</label>
                  <span class="setting-description">Receive notifications for class announcements</span>
                </div>
                <div class="toggle-switch">
                  <input 
                    type="checkbox" 
                    id="announcement-notifications" 
                    checked={userSettings.notifications.announcementNotifications}
                  />
                  <label for="announcement-notifications" class="switch"></label>
                </div>
              </div>

              <div class="setting-item">
                <div class="setting-info">
                  <label for="weekly-digest">Weekly Digest</label>
                  <span class="setting-description">Receive a weekly summary email</span>
                </div>
                <div class="toggle-switch">
                  <input 
                    type="checkbox" 
                    id="weekly-digest" 
                    checked={userSettings.notifications.weeklyDigest}
                  />
                  <label for="weekly-digest" class="switch"></label>
                </div>
              </div>
            </div>
          </div>
        </section>

        <!-- Privacy Settings -->
        <section class="settings-section">
          <div class="section-header">
            <div class="section-title">
              <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <rect x="3" y="11" width="18" height="11" rx="2" ry="2"></rect>
                <circle cx="12" cy="16" r="1"></circle>
                <path d="M7 11V7a5 5 0 0 1 10 0v4"></path>
              </svg>
              <h2>Privacy</h2>
            </div>
            <p class="section-description">Control your privacy and data sharing preferences</p>
          </div>

          <div class="settings-card">
            <div class="settings-group">
              <div class="setting-item">
                <div class="setting-info">
                  <label for="profile-visibility">Profile Visibility</label>
                  <span class="setting-description">Who can see your profile information</span>
                </div>
                <select id="profile-visibility" class="setting-select">
                  <option value="public" selected={userSettings.privacy.profileVisibility === 'public'}>Public</option>
                  <option value="classmates" selected={userSettings.privacy.profileVisibility === 'classmates'}>Classmates Only</option>
                  <option value="private" selected={userSettings.privacy.profileVisibility === 'private'}>Private</option>
                </select>
              </div>

              <div class="setting-item">
                <div class="setting-info">
                  <label for="show-email">Show Email to Instructors</label>
                  <span class="setting-description">Allow instructors to see your email address</span>
                </div>
                <div class="toggle-switch">
                  <input 
                    type="checkbox" 
                    id="show-email" 
                    checked={userSettings.privacy.showEmailToInstructors}
                  />
                  <label for="show-email" class="switch"></label>
                </div>
              </div>

              <div class="setting-item">
                <div class="setting-info">
                  <label for="peer-messages">Allow Peer Messages</label>
                  <span class="setting-description">Let other students send you messages</span>
                </div>
                <div class="toggle-switch">
                  <input 
                    type="checkbox" 
                    id="peer-messages" 
                    checked={userSettings.privacy.allowPeerMessages}
                  />
                  <label for="peer-messages" class="switch"></label>
                </div>
              </div>
            </div>
          </div>
        </section>

        <!-- Display Preferences -->
        <section class="settings-section">
          <div class="section-header">
            <div class="section-title">
              <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <rect x="2" y="3" width="20" height="14" rx="2" ry="2"></rect>
                <line x1="8" y1="21" x2="16" y2="21"></line>
                <line x1="12" y1="17" x2="12" y2="21"></line>
              </svg>
              <h2>Display Preferences</h2>
            </div>
            <p class="section-description">Customize the appearance and formatting</p>
          </div>

          <div class="settings-card">
            <div class="settings-group">
              <div class="setting-item">
                <div class="setting-info">
                  <label for="theme">Theme</label>
                  <span class="setting-description">Choose your preferred color scheme</span>
                </div>
                <select id="theme" class="setting-select">
                  <option value="light" selected={userSettings.preferences.theme === 'light'}>Light</option>
                  <option value="dark" selected={userSettings.preferences.theme === 'dark'}>Dark</option>
                  <option value="auto" selected={userSettings.preferences.theme === 'auto'}>Auto</option>
                </select>
              </div>

              <div class="setting-item">
                <div class="setting-info">
                  <label for="language">Language</label>
                  <span class="setting-description">Select your preferred language</span>
                </div>
                <select id="language" class="setting-select">
                  <option value="en" selected={userSettings.preferences.language === 'en'}>English</option>
                  <option value="es" selected={userSettings.preferences.language === 'es'}>Español</option>
                  <option value="fr" selected={userSettings.preferences.language === 'fr'}>Français</option>
                  <option value="de" selected={userSettings.preferences.language === 'de'}>Deutsch</option>
                </select>
              </div>

              <div class="setting-item">
                <div class="setting-info">
                  <label for="timezone">Timezone</label>
                  <span class="setting-description">Your local timezone for scheduling</span>
                </div>
                <select id="timezone" class="setting-select">
                  <option value="EST" selected={userSettings.preferences.timezone === 'EST'}>Eastern Time (EST)</option>
                  <option value="CST" selected={userSettings.preferences.timezone === 'CST'}>Central Time (CST)</option>
                  <option value="MST" selected={userSettings.preferences.timezone === 'MST'}>Mountain Time (MST)</option>
                  <option value="PST" selected={userSettings.preferences.timezone === 'PST'}>Pacific Time (PST)</option>
                </select>
              </div>

              <div class="setting-item">
                <div class="setting-info">
                  <label for="date-format">Date Format</label>
                  <span class="setting-description">How dates are displayed</span>
                </div>
                <select id="date-format" class="setting-select">
                  <option value="MM/DD/YYYY" selected={userSettings.preferences.dateFormat === 'MM/DD/YYYY'}>MM/DD/YYYY</option>
                  <option value="DD/MM/YYYY" selected={userSettings.preferences.dateFormat === 'DD/MM/YYYY'}>DD/MM/YYYY</option>
                  <option value="YYYY-MM-DD" selected={userSettings.preferences.dateFormat === 'YYYY-MM-DD'}>YYYY-MM-DD</option>
                </select>
              </div>

              <div class="setting-item">
                <div class="setting-info">
                  <label for="time-format">Time Format</label>
                  <span class="setting-description">12-hour or 24-hour time display</span>
                </div>
                <select id="time-format" class="setting-select">
                  <option value="12h" selected={userSettings.preferences.timeFormat === '12h'}>12-hour (3:30 PM)</option>
                  <option value="24h" selected={userSettings.preferences.timeFormat === '24h'}>24-hour (15:30)</option>
                </select>
              </div>
            </div>
          </div>
        </section>

        <!-- Academic Settings -->
        <section class="settings-section">
          <div class="section-header">
            <div class="section-title">
              <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M22 10v6M2 10l10-5 10 5-10 5z"></path>
                <path d="M6 12v5c3 3 9 3 12 0v-5"></path>
              </svg>
              <h2>Academic Preferences</h2>
            </div>
            <p class="section-description">Customize your academic experience</p>
          </div>

          <div class="settings-card">
            <div class="settings-group">
              <div class="setting-item">
                <div class="setting-info">
                  <label for="calendar-view">Default Calendar View</label>
                  <span class="setting-description">How your calendar is displayed by default</span>
                </div>
                <select id="calendar-view" class="setting-select">
                  <option value="day" selected={userSettings.academic.defaultCalendarView === 'day'}>Day View</option>
                  <option value="week" selected={userSettings.academic.defaultCalendarView === 'week'}>Week View</option>
                  <option value="month" selected={userSettings.academic.defaultCalendarView === 'month'}>Month View</option>
                </select>
              </div>

              <div class="setting-item">
                <div class="setting-info">
                  <label for="show-completed">Show Completed Assignments</label>
                  <span class="setting-description">Display completed assignments in lists</span>
                </div>
                <div class="toggle-switch">
                  <input 
                    type="checkbox" 
                    id="show-completed" 
                    checked={userSettings.academic.showCompletedAssignments}
                  />
                  <label for="show-completed" class="switch"></label>
                </div>
              </div>

              <div class="setting-item">
                <div class="setting-info">
                  <label for="grading-scale">Preferred Grading Scale</label>
                  <span class="setting-description">How you prefer to view grades</span>
                </div>
                <select id="grading-scale" class="setting-select">
                  <option value="letter" selected={userSettings.academic.gradingScale === 'letter'}>Letter Grades (A, B, C)</option>
                  <option value="percentage" selected={userSettings.academic.gradingScale === 'percentage'}>Percentage (95%, 87%)</option>
                  <option value="points" selected={userSettings.academic.gradingScale === 'points'}>Points (95/100)</option>
                </select>
              </div>
            </div>
          </div>
        </section>
      </div>

      <div class="settings-sidebar">
        <!-- Quick Actions -->
        <section class="sidebar-section">
          <h3>Quick Actions</h3>
          <div class="quick-actions">
            <button class="action-btn save-btn">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"></path>
                <polyline points="17,21 17,13 7,13 7,21"></polyline>
                <polyline points="7,3 7,8 15,8"></polyline>
              </svg>
              Save All Settings
            </button>
            <button class="action-btn reset-btn">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <polyline points="1,4 1,10 7,10"></polyline>
                <path d="M3.51 15a9 9 0 1 0 2.13-9.36L1 10"></path>
              </svg>
              Reset to Defaults
            </button>
          </div>
        </section>

        <!-- Account Actions -->
        <section class="sidebar-section">
          <h3>Account</h3>
          <div class="account-actions">
            <button class="action-btn">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M9 12l2 2 4-4"></path>
                <path d="M21 12c.552 0 1-.448 1-1V8a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v3c0 .552.448 1 1 1h8"></path>
                <path d="M3 16a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-3"></path>
              </svg>
              Export Data
            </button>
            <button class="action-btn">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
                <circle cx="9" cy="9" r="2"></circle>
                <path d="M21 15l-3.086-3.086a2 2 0 0 0-2.828 0L6 21"></path>
              </svg>
              Download Transcript
            </button>
            <button class="action-btn danger-btn">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <polyline points="3,6 5,6 21,6"></polyline>
                <path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path>
                <line x1="10" y1="11" x2="10" y2="17"></line>
                <line x1="14" y1="11" x2="14" y2="17"></line>
              </svg>
              Delete Account
            </button>
          </div>
        </section>

        <!-- Help & Support -->
        <section class="sidebar-section">
          <h3>Help & Support</h3>
          <div class="help-links">
            <a href="/support/settings" class="help-link">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <circle cx="12" cy="12" r="10"></circle>
                <path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path>
                <line x1="12" y1="17" x2="12.01" y2="17"></line>
              </svg>
              Settings Help
            </a>
            <a href="/support/contact" class="help-link">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path>
                <polyline points="22,6 12,13 2,6"></polyline>
              </svg>
              Contact Support
            </a>
            <a href="/support/privacy" class="help-link">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"></path>
              </svg>
              Privacy Policy
            </a>
          </div>
        </section>
      </div>
    </div>
  </div>
</StudentLayout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Save settings functionality
    const saveBtn = document.querySelector('.save-btn');
    const resetBtn = document.querySelector('.reset-btn');
    const dangerBtn = document.querySelector('.danger-btn');
    
    if (saveBtn) {
      saveBtn.addEventListener('click', () => {
        // Here you would collect all form data and send to server
        console.log('Saving settings...');
        
        // Show success message
        showNotification('Settings saved successfully!', 'success');
      });
    }

    if (resetBtn) {
      resetBtn.addEventListener('click', () => {
        if (confirm('Are you sure you want to reset all settings to default values?')) {
          console.log('Resetting settings...');
          // Reset all form inputs to default values
          showNotification('Settings reset to defaults', 'info');
        }
      });
    }

    if (dangerBtn) {
      dangerBtn.addEventListener('click', () => {
        const confirmText = 'DELETE';
        const userInput = prompt(`This action cannot be undone. Type "${confirmText}" to confirm account deletion:`);
        
        if (userInput === confirmText) {
          console.log('Account deletion requested...');
          alert('Account deletion request submitted. You will receive a confirmation email.');
        }
      });
    }

    // Auto-save on toggle switches
    const toggleSwitches = document.querySelectorAll('input[type="checkbox"]');
    toggleSwitches.forEach(toggle => {
      toggle.addEventListener('change', () => {
        const toggleElement = toggle as HTMLInputElement;
        console.log(`Setting ${toggleElement.id} changed to:`, toggleElement.checked);
        // Here you would auto-save the specific setting
      });
    });

    // Auto-save on select changes
    const selects = document.querySelectorAll('.setting-select');
    selects.forEach(select => {
      select.addEventListener('change', () => {
        const selectElement = select as HTMLSelectElement;
        console.log(`Setting ${selectElement.id} changed to:`, selectElement.value);
        // Here you would auto-save the specific setting
      });
    });

    function showNotification(message: string, type: string) {
      // Create and show notification
      const notification = document.createElement('div');
      notification.className = `notification ${type}`;
      notification.textContent = message;
      notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        padding: 1rem 1.5rem;
        border-radius: 8px;
        color: white;
        z-index: 1000;
        animation: slideIn 0.3s ease-out;
      `;
      
      if (type === 'success') notification.style.background = '#10b981';
      if (type === 'info') notification.style.background = '#3b82f6';
      if (type === 'error') notification.style.background = '#ef4444';
      
      document.body.appendChild(notification);
      
      setTimeout(() => {
        notification.remove();
      }, 3000);
    }
  });
</script>

<style>
  :root {
    --bg: #1c1c1c;
    --panel: #242424;
    --muted: var(--color-text-muted);
    --accent1: rgb(139, 0, 0);
    --accent2: rgba(139, 0, 0, 0.8);
    --card-bg: rgba(139, 0, 0, 0.1);
    --card-border: rgba(139, 0, 0, 0.2);
    --success: #10b981;
    --warning: #f59e0b;
    --danger: #ef4444;
    --info: #3b82f6;
  }

  .student-settings {
    padding: 0;
    font-family: 'IBM Plex Sans', system-ui, sans-serif;
    width: 100%;
    color: #E6EEF8;
  }

  .settings-header {
    margin-bottom: 2rem;
  }

  .header-content h1 {
    font-size: 2rem;
    font-weight: 600;
    background: linear-gradient(45deg, var(--accent1), #EF4444);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    margin: 0;
  }

  .header-description {
    color: var(--muted);
    margin: 0.25rem 0 0 0;
  }

  .settings-content {
    display: grid;
    grid-template-columns: 1fr 300px;
    gap: 2rem;
  }

  .settings-section {
    margin-bottom: 2.5rem;
  }

  .section-header {
    margin-bottom: 1.5rem;
  }

  .section-title {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-bottom: 0.5rem;
  }

  .section-title svg {
    color: var(--accent1);
  }

  .section-title h2 {
    margin: 0;
    color: white;
    font-size: 1.3rem;
    font-weight: 600;
  }

  .section-description {
    color: var(--muted);
    font-size: 0.9rem;
    margin: 0;
  }

  .settings-card {
    background: var(--panel);
    border-radius: 12px;
    padding: 1.5rem;
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .settings-group {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .setting-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 1rem;
    padding: 1rem;
    background: rgba(255, 255, 255, 0.02);
    border-radius: 8px;
    border: 1px solid rgba(255, 255, 255, 0.05);
  }

  .setting-info {
    flex: 1;
  }

  .setting-info label {
    display: block;
    color: white;
    font-weight: 500;
    margin-bottom: 0.25rem;
    cursor: pointer;
  }

  .setting-description {
    color: var(--muted);
    font-size: 0.85rem;
    line-height: 1.3;
  }

  /* Toggle Switch Styles */
  .toggle-switch {
    position: relative;
    display: inline-block;
  }

  .toggle-switch input[type="checkbox"] {
    display: none;
  }

  .switch {
    position: relative;
    display: inline-block;
    width: 50px;
    height: 26px;
    background-color: rgba(255, 255, 255, 0.2);
    border-radius: 26px;
    cursor: pointer;
    transition: background-color 0.3s;
  }

  .switch::before {
    content: '';
    position: absolute;
    top: 2px;
    left: 2px;
    width: 22px;
    height: 22px;
    background-color: white;
    border-radius: 50%;
    transition: transform 0.3s;
  }

  input[type="checkbox"]:checked + .switch {
    background-color: var(--accent1);
  }

  input[type="checkbox"]:checked + .switch::before {
    transform: translateX(24px);
  }

  /* Select Styles */
  .setting-select {
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 6px;
    padding: 0.5rem 1rem;
    color: white;
    font-size: 0.9rem;
    min-width: 150px;
    cursor: pointer;
  }

  .setting-select:focus {
    outline: none;
    border-color: var(--accent1);
    background: rgba(255, 255, 255, 0.15);
  }

  .setting-select option {
    background: var(--panel);
    color: white;
  }

  /* Sidebar Styles */
  .settings-sidebar {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .sidebar-section {
    background: var(--panel);
    border-radius: 12px;
    padding: 1.5rem;
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .sidebar-section h3 {
    margin: 0 0 1rem 0;
    color: white;
    font-size: 1.1rem;
    font-weight: 600;
  }

  .quick-actions, .account-actions {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .action-btn {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1rem;
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 8px;
    color: white;
    cursor: pointer;
    font-size: 0.9rem;
    font-weight: 500;
    transition: all 0.15s;
    text-align: left;
  }

  .action-btn:hover {
    background: rgba(255, 255, 255, 0.15);
    border-color: rgba(255, 255, 255, 0.3);
  }

  .save-btn {
    background: var(--success);
    border-color: var(--success);
  }

  .save-btn:hover {
    background: rgba(16, 185, 129, 0.8);
  }

  .reset-btn {
    background: var(--info);
    border-color: var(--info);
  }

  .reset-btn:hover {
    background: rgba(59, 130, 246, 0.8);
  }

  .danger-btn {
    background: var(--danger);
    border-color: var(--danger);
  }

  .danger-btn:hover {
    background: rgba(239, 68, 68, 0.8);
  }

  .help-links {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .help-link {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem;
    color: var(--muted);
    text-decoration: none;
    border-radius: 6px;
    font-size: 0.9rem;
    transition: all 0.15s;
  }

  .help-link:hover {
    background: rgba(255, 255, 255, 0.05);
    color: white;
  }

  .help-link svg {
    color: var(--accent1);
  }

  @keyframes slideIn {
    from {
      transform: translateX(100%);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }

  @media (max-width: 1024px) {
    .settings-content {
      grid-template-columns: 1fr;
    }

    .settings-sidebar {
      grid-row: 1;
    }
  }

  @media (max-width: 768px) {
    .setting-item {
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
    }

    .toggle-switch, .setting-select {
      align-self: flex-end;
    }

    .section-title {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }

    .quick-actions, .account-actions {
      gap: 0.5rem;
    }
  }
</style>